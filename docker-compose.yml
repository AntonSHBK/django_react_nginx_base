version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./docker/dev/Dockerfile.back    
    working_dir: /app/backend
    env_file:
      - ./env/dev/.env
    ports:
      - "8000:8000"
      - "5678:5678"
    command:
      - sh
      - -c
      - |
        sleep 5s
        python manage.py collectstatic --noinput
        python manage.py makemigrations
        python manage.py migrate
        python -m debugpy --listen 0.0.0.0:5678 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app/backend
    depends_on:
      - db
    # networks:
    #   - db-net
    #   - backend


  db:
    image: postgres:14.3-alpine
    env_file:
      - ./env/dev/.db.env
    ports:
      - "5432:5432"
    volumes:
      - ./db:/var/lib/postgresql/data
    # networks:
    #   - db-net


  nodejs:
    build:
      context: .
      dockerfile: ./docker/dev/Dockerfile.front
    ports:
      - 3000:3000
    # networks:
    #   - backend
    volumes:
      - ./frontend:/app/frontend
    depends_on:
      - app
    command: npm run start

  redis:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.redis
    env_file:
      - ./env/dev/.env


  supevisor:
    restart: always
    build:
      context: .
      dockerfile: ./docker/dev/Dockerfile.back 
    working_dir: /app/backend
    command:
      - /bin/bash
      - '-c'
      - |
        supervisord -c /etc/supervisor/supervisord.conf 
        supervisorctl reread
        supervisorctl update
        supervisorctl start all
        supervisorctl status
        echo  "Container in sleep status"
        sleep 5d
    
    volumes:
      - ./backend/logs/supervisor:/var/log/app/
    env_file:
      - ./env/dev/.env
    depends_on:
      - app
      - redis

# networks:
#   backend:
#     driver:  default
#     ipam:
#       driver: bridge
#       config:
#         - subnet: 127.28.0.0/16
#   db-net:
#     driver: bridge

  

